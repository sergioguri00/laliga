---
import Layout from "../../../layouts/Layout.astro";
import { getCountryCode } from "../../../utils/countryCodes";
import { getRelativeLocaleUrl } from "astro:i18n";
import { translator } from "../../../utils/dictionary.js";
import "../../../styles/global.css";

const { id } = Astro.params;
const teamResponse = await fetch(`http://localhost:1234/teams/${id}`);
const teamData = await teamResponse.json();
const team = teamData[0];

const stadiumResponse = await fetch(
  `http://localhost:1234/teams/${id}/stadium`
);
const stadiumData = await stadiumResponse.json();
const stadium = stadiumData[0];

const managerResponse = await fetch(
  `http://localhost:1234/teams/${id}/manager`
);
const managerData = await managerResponse.json();
const manager = managerData[0];

const resultsResponse = await fetch(
  `http://localhost:1234/teams/${id}/matches`
);
const resultsData = await resultsResponse.json();

const playersData = await fetch(`http://localhost:1234/teams/${id}/players`);
const players = await playersData.json();

const tableResponse = await fetch("http://localhost:1234/leagues/1/table");
const tableData = await tableResponse.json();
const teamPosition =
  tableData.findIndex(
    (teamLeague: { team_id: number }) => teamLeague.team_id === team.id
  ) + 1;
const teamStats = tableData[teamPosition - 1];

export async function getStaticPaths() {
  const teamsResponse = await fetch("http://localhost:1234/teams");
  const teamsData = await teamsResponse.json();
  const paths = teamsData.map((team: { id: number }) => ({
    params: { id: team.id },
  }));

  return paths;
}

export async function getStaticProps({ params }: { params: { id: string } }) {
  const { id } = params;
  const teamResponse = await fetch(`http://localhost:1234/teams/${id}`);
  const teamData = await teamResponse.json();

  if (!teamData) {
    throw new Error("team not found");
  }

  return { props: { teamData } };
}

interface Player {
  id: number;
  name: string;
  lastName: string;
  knownAs: string;
  number: number;
  position: string;
  country: string;
  birthday: string;
  height: number;
  photo: string;
}

const currentLang = Astro.currentLocale || "es";
---

<Layout
  title=`LaLiga Teams | ${team.shortName}`
  description={`All information about ${team.name}`}
>
  <div class="py-3 px-5 mt-20">
    {
      (
        <div
          class={`w-full h-auto grid grid-cols-1 sm:h-96 sm:grid-cols-3 grid-rows-3 sm:grid-rows-1 items-center gap-4 rounded-3xl p-8 shadow-zinc-500 shadow-lg`}
          style={`background: radial-gradient(circle, ${team.secondaryColor} 0%, ${team.mainColor} 50%)`}
        >
          <div
            class={`text-center flex flex-col gap-4 ${team.mainColor === "#ffffff" || team.mainColor === "#ffd301" ? "text-mainblack" : "text-white"}`}
          >
            <div class="flex flex-col justify-between items-center font-la-liga-font">
              <h1 class="text-4xl font-medium text-center font-la-liga-font">
                {team.name}
              </h1>
              <div class="flex flex-row justify-center items-end">
                <p class="text-lg mr-1 uppercase">est.</p>
                <p class="text-2xl">{team.year}</p>
              </div>
            </div>
            <div>
              <p class="font-bold uppercase">{translator("en", "president")}</p>
              <p>{team.president}</p>
            </div>
            <div>
              <p class="font-la-liga-font text-2xl">{`POS. ${teamPosition}`}</p>
              <p class="font-la-liga-font text-2xl">{`${teamStats.points} pts`}</p>
              <p class="font-la-liga-font text-2xl">{`${teamStats.wins} W | ${teamStats.draws} D | ${teamStats.losses} L`}</p>
            </div>
          </div>
          <div>
            <a
              href={team.website}
              target="_blank"
              rel="noreferrer noopener"
              class="flex flex-col hover:scale-105 transition"
            >
              <img src={team.badge} alt={team.name} class="mx-auto h-full" />
            </a>
          </div>
          <div
            class={`grid grid-rows-2 justify-center items-center ${team.mainColor === "#ffffff" || team.mainColor === "#ffd301" ? "text-mainblack" : "text-white"}`}
          >
            <div class="text-center">
              <p class="text-2xl font-la-liga-font">{stadium.name}</p>
              <div class="flex flex-row items-center mt-3 justify-between text-center">
                <div>
                  <p class="font-bold uppercase">est.</p>
                  <p>{stadium.year}</p>
                </div>
                <div>
                  <p class="font-bold uppercase">
                    {translator("en", "capacity")}
                  </p>
                  <p>{stadium.capacity}</p>
                </div>
              </div>
            </div>
            <div>
              <a
                href={`https://www.google.com/maps/search/?api=1&query=${stadium.latitude}%2C${stadium.longitude}`}
                target="_blank"
                rel="noreferrer noopener"
                class="flex flex-col hover:scale-105 transition"
              >
                <img
                  src={stadium.photo}
                  alt={stadium.name}
                  class="mx-auto h-24"
                />
                `
              </a>
            </div>
          </div>
        </div>
      )
    }
  </div>
  <div class="py-3 px-2 md:px-5">
    <nav class="flex flex-row w-full justify-around px-5">
      <div
        id="squad"
        class={"cursor-pointer text-xl hover:border-[#ff4b44] transition border-b-4 border-[#ff4b44] font-bold section w-24 text-center uppercase"}
      >
        {translator("en", "squad")}
      </div>
      <div
        id="results"
        class="cursor-pointer text-xl hover:text-[#ff4b44] hover:border-[#ff4b44] transition border-b-4 section w-24 text-center uppercase"
      >
        {translator("en", "results")}
      </div>
    </nav>

    <section id="squadSection" class="p-4 xl:p-10 hidden">
      <h2 class="text-3xl text-bold uppercase font-la-liga-font">
        {`${team.shortName} ${translator("en", "squadSection")}`}
      </h2>
      <div class="flex flex-col">
        <div>
          <div class="border-b-[1px] border-mainblack w-full text-start">
            <p class="mt-4 font-la-liga-font text-2xl pb-2 uppercase">
              {translator("en", "manager")}
            </p>
          </div>
          <div
            class="grid mt-4 justify-items-center grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-4 p-3 text-sm md:text-md xl:text-[16px]"
          >
            <div
              class="text-start border-[1px] border-mainblack rounded-lg p-10 w-full grid grid-cols-2 gap-4 relative mt-4"
            >
              <div
                class="absolute inset-0 bg-cover bg-center opacity-10"
                style={`background-image: url('${team.badge}');`}
              >
              </div>
              <div class="flex flex-col justify-between relative z-10">
                <div class="self-start">
                  <p
                    class={`text-bold text-2xl font-la-liga-font text-mainblack`}
                  >
                    {`${manager.name} ${manager.lastName}`}
                  </p>
                </div>
                <div class="flex flex-col">
                  <p class="uppercase font-bold text-sm">
                    {translator("en", "manager")}
                  </p>
                  <div class="flex flex-row items-center">
                    <img
                      src={`/flags/${getCountryCode(manager.country)}.svg`}
                      alt={manager.country}
                      class="mr-2 w-6 h-4"
                    />
                    <p class="text-center text-sm">{manager.country}</p>
                  </div>
                </div>
              </div>
              <img
                src={manager.photo}
                alt={manager.lastName}
                class="w-full transition relative z-10"
                style="align-self: center"
              />
              <div
                class="grid grid-cols-2 col-span-2 border-t-[1px] pt-2 gap-4 relative z-10 border-mainblack"
              >
                <div class="col-span-2 w-full">
                  <p class="text-center uppercase font-bold">
                    {translator("en", "birthday")}
                  </p>
                  <p class="text-center">
                    {manager.birthday.toString().split("T")[0]}
                  </p>
                </div>
              </div>
            </div>
          </div>
          <div>
            <div
              class="border-b-[1px] border-mainblack w-full text-start mt-10"
            >
              <p class="uppercase font-la-liga-font text-2xl pb-2">
                {translator("en", "goalkeepers")}
              </p>
            </div>
            <div
              class="grid mt-4 justify-items-center grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-4 p-3"
            >
              {
                players.map((player: Player) =>
                  player.position === "Goalkeeper" ? (
                    <div class="text-start border-[1px] border-mainblack rounded-lg p-10 w-full grid grid-cols-2 gap-4 relative text-sm md:text-md xl:text-[16px]">
                      <div
                        class="absolute inset-0 bg-cover bg-center opacity-10"
                        style={`background-image: url('${team.badge}');`}
                      />
                      <div class="flex flex-col justify-between relative z-10">
                        <div class="self-start">
                          <p
                            class={`text-bold text-5xl font-la-liga-font`}
                            style={`color:${team.mainColor === "#ffffff" ? "#00001B" : team.mainColor}`}
                          >
                            {player.number}
                          </p>
                          <p
                            class={`text-bold text-2xl font-la-liga-font text-mainblack`}
                          >
                            {player.knownAs !== null
                              ? player.knownAs
                              : player.lastName}
                          </p>
                        </div>
                        <div class="flex flex-col">
                          <p class="uppercase font-bold text-sm">
                            {translator("en", "goalkeeper")}
                          </p>
                          <div class="flex flex-row items-center">
                            <img
                              src={`/flags/${getCountryCode(player.country)}.svg`}
                              alt={String(player.country)}
                              class="mr-2 w-6 h-4"
                            />
                            <p class="text-center text-sm">{player.country}</p>
                          </div>
                        </div>
                      </div>
                      <a
                        href=""
                        class="relative z-10"
                        style="align-self: center"
                      >
                        <img
                          src={player.photo}
                          alt={player.knownAs}
                          class="w-full hover:opacity-80 hover:scale-[0.98] transition"
                        />
                      </a>
                      <div class="grid grid-cols-2 col-span-2 border-t-[1px] pt-2 gap-4 relative z-10 border-mainblack">
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "birthday")}
                          </p>
                          <p class="text-center">
                            {player.birthday.toString().split("T")[0]}
                          </p>
                        </div>
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "height")}
                          </p>
                          <p class="text-center">{player.height} cm</p>
                        </div>
                      </div>
                    </div>
                  ) : null
                )
              }
            </div>
            <div
              class="border-b-[1px] border-mainblack w-full text-start mt-10"
            >
              <p class="uppercase font-la-liga-font text-2xl pb-2">
                {translator("en", "defenders")}
              </p>
            </div>
            <div
              class="grid mt-4 justify-items-center grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-4 p-3"
            >
              {
                players.map((player: Player) =>
                  player.position === "Defender" ? (
                    <div class="text-start border-[1px] border-mainblack rounded-lg p-10 w-full grid grid-cols-2 gap-4 relative text-sm md:text-md xl:text-[16px]">
                      <div
                        class="absolute inset-0 bg-cover bg-center opacity-10"
                        style={`background-image: url('${team.badge}');`}
                      />
                      <div class="flex flex-col justify-between relative z-10">
                        <div class="self-start">
                          <p
                            class={`text-bold text-5xl font-la-liga-font`}
                            style={`color:${team.mainColor === "#ffffff" ? "#00001B" : team.mainColor}`}
                          >
                            {player.number}
                          </p>
                          <p
                            class={`text-bold text-2xl font-la-liga-font text-mainblack`}
                          >
                            {player.knownAs !== null
                              ? player.knownAs
                              : player.lastName}
                          </p>
                        </div>
                        <div class="flex flex-col">
                          <p class="uppercase font-bold text-sm">
                            {translator("en", "defender")}
                          </p>
                          <div class="flex flex-row items-center">
                            <img
                              src={`/flags/${getCountryCode(player.country)}.svg`}
                              alt={String(player.country)}
                              class="mr-2 w-6 h-4"
                            />
                            <p class="text-center text-sm">{player.country}</p>
                          </div>
                        </div>
                      </div>
                      <a
                        href=""
                        class="relative z-10"
                        style="align-self: center"
                      >
                        <img
                          src={player.photo}
                          alt={player.knownAs}
                          class="w-full hover:opacity-80 hover:scale-[0.98] transition"
                        />
                      </a>
                      <div class="grid grid-cols-2 col-span-2 border-t-[1px] pt-2 gap-4 relative z-10 border-mainblack">
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "birthday")}
                          </p>
                          <p class="text-center">
                            {player.birthday.toString().split("T")[0]}
                          </p>
                        </div>
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "height")}
                          </p>
                          <p class="text-center">{player.height} cm</p>
                        </div>
                      </div>
                    </div>
                  ) : null
                )
              }
            </div>
            <div
              class="border-b-[1px] border-mainblack w-full text-start mt-10"
            >
              <p class="uppercase font-la-liga-font text-2xl pb-2">
                {translator("en", "midfielders")}
              </p>
            </div>
            <div
              class="grid mt-4 justify-items-center grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-4 p-3"
            >
              {
                players.map((player: Player) =>
                  player.position === "Midfielder" ? (
                    <div class="text-start border-[1px] border-mainblack rounded-lg p-10 w-full grid grid-cols-2 gap-4 relative text-sm md:text-md xl:text-[16px]">
                      <div
                        class="absolute inset-0 bg-cover bg-center opacity-10"
                        style={`background-image: url('${team.badge}');`}
                      />
                      <div class="flex flex-col justify-between relative z-10">
                        <div class="self-start">
                          <p
                            class={`text-bold text-5xl font-la-liga-font`}
                            style={`color:${team.mainColor === "#ffffff" ? "#00001B" : team.mainColor}`}
                          >
                            {player.number}
                          </p>
                          <p
                            class={`text-bold text-2xl font-la-liga-font text-mainblack`}
                          >
                            {player.knownAs !== null
                              ? player.knownAs
                              : player.lastName}
                          </p>
                        </div>
                        <div class="flex flex-col">
                          <p class="uppercase font-bold text-sm">
                            {translator("en", "midfielder")}
                          </p>
                          <div class="flex flex-row items-center">
                            <img
                              src={`/flags/${getCountryCode(player.country)}.svg`}
                              alt={String(player.country)}
                              class="mr-2 w-6 h-4"
                            />
                            <p class="text-center text-sm">{player.country}</p>
                          </div>
                        </div>
                      </div>
                      <a
                        href=""
                        class="relative z-10"
                        style="align-self: center"
                      >
                        <img
                          src={player.photo}
                          alt={player.knownAs}
                          class="w-full hover:opacity-80 hover:scale-[0.98] transition"
                        />
                      </a>
                      <div class="grid grid-cols-2 col-span-2 border-t-[1px] pt-2 gap-4 relative z-10 border-mainblack">
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "birthday")}
                          </p>
                          <p class="text-center">
                            {player.birthday.toString().split("T")[0]}
                          </p>
                        </div>
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "height")}
                          </p>
                          <p class="text-center">{player.height} cm</p>
                        </div>
                      </div>
                    </div>
                  ) : null
                )
              }
            </div>
            <div
              class="border-b-[1px] border-mainblack w-full text-start mt-10"
            >
              <p class="uppercase font-la-liga-font text-2xl pb-2">
                {translator("en", "forwards")}
              </p>
            </div>
            <div
              class="grid mt-4 justify-items-center grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-4 p-3"
            >
              {
                players.map((player: Player) =>
                  player.position === "Forward" ? (
                    <div class="text-start border-[1px] border-mainblack rounded-lg p-10 w-full grid grid-cols-2 gap-4 relative text-sm md:text-md xl:text-[16px]">
                      <div
                        class="absolute inset-0 bg-cover bg-center opacity-10"
                        style={`background-image: url('${team.badge}');`}
                      />
                      <div class="flex flex-col justify-between relative z-10">
                        <div class="self-start">
                          <p
                            class={`text-bold text-5xl font-la-liga-font`}
                            style={`color:${team.mainColor === "#ffffff" ? "#00001B" : team.mainColor}`}
                          >
                            {player.number}
                          </p>
                          <p
                            class={`text-bold text-2xl font-la-liga-font text-mainblack`}
                          >
                            {player.knownAs !== null
                              ? player.knownAs
                              : player.lastName}
                          </p>
                        </div>
                        <div class="flex flex-col">
                          <p class="uppercase font-bold text-sm">
                            {translator("en", "forward")}
                          </p>
                          <div class="flex flex-row items-center">
                            <img
                              src={`/flags/${getCountryCode(player.country)}.svg`}
                              alt={String(player.country)}
                              class="mr-2 w-6 h-4"
                            />
                            <p class="text-center text-sm">{player.country}</p>
                          </div>
                        </div>
                      </div>
                      <a
                        href=""
                        class="relative z-10"
                        style="align-self: center"
                      >
                        <img
                          src={player.photo}
                          alt={player.knownAs}
                          class="w-full hover:opacity-80 hover:scale-[0.98] transition"
                        />
                      </a>
                      <div class="grid grid-cols-2 col-span-2 border-t-[1px] pt-2 gap-4 relative z-10 border-mainblack">
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "birthday")}
                          </p>
                          <p class="text-center">
                            {player.birthday.toString().split("T")[0]}
                          </p>
                        </div>
                        <div>
                          <p class="text-center uppercase font-bold">
                            {translator("en", "height")}
                          </p>
                          <p class="text-center">{player.height} cm</p>
                        </div>
                      </div>
                    </div>
                  ) : null
                )
              }
            </div>
          </div>
        </div>
      </div>
    </section>

    <section id="resultsSection" class="p-10 hidden">
      <h2 class="text-3xl text-bold uppercase font-la-liga-font">
        {`${team.shortName} ${translator("en", "resultsSection")}`}
      </h2>
      <div class="flex flex-col">
        {
          resultsData.map((result: any) => (
            <div class="sm:mx-4 md:mx-10 lg:mx-20 xl:mx-40 py-2 flex flex-col gap-4 relative mt-4">
              <h3 class="text-2xl text-bold uppercase font-la-liga-font border-b-[1px] border-mainblack pb-2 pl-2">
                {`${translator("en", "matchday")} ${result.matchday_id}`}
              </h3>
              <div
                class="grid place-items-center items-center align-middle font-la-liga-font text-sm md:text-xl gap-2 md:gap-10"
                style="grid-template-columns: 1fr 1fr 40px 1fr 85px;"
              >
                <div class="flex flex-col sm:flex-row sm:gap-2 text-xl justify-self-end text-center">
                  <p>
                    {`${result.matchdate.toString().split("T")[0].split("-")[2]}/${result.matchdate.toString().split("T")[0].split("-")[1]}/${result.matchdate.toString().split("T")[0].split("-")[0]}`}
                  </p>
                  <p>{result.matchdate.toString().split("T")[1].slice(0, 5)}</p>
                </div>
                <a
                  href={getRelativeLocaleUrl(
                    currentLang,
                    `/teams/${result.localTeamId}`
                  )}
                  class="flex-row flex items-center justify-self-end hover:scale-105 hover:text-[#ff4b44] transition"
                >
                  <img src={result.localTeamBadge} class="h-10" />
                  <p class="text-xl hidden xl:block">{result.localTeamName}</p>
                </a>
                <p class="font-la-liga-font text-2xl">
                  {result.localTeamGoals} - {result.awayTeamGoals}
                </p>
                <a
                  href={getRelativeLocaleUrl(
                    currentLang,
                    `/teams/${result.awayTeamId}`
                  )}
                  class="flex-row flex items-center justify-self-start hover:scale-105 hover:text-[#ff4b44] transition"
                >
                  <img src={result.awayTeamBadge} class="h-10" />
                  <p class="hidden xl:block">{result.awayTeamName}</p>
                </a>
                <a href="">
                  <button class="p-2 rounded-lg hover:scale-105 text-sm transition match-button uppercase">
                    {translator("en", "viewMatch")}
                  </button>
                </a>
              </div>
            </div>
          ))
        }
      </div>
    </section>
  </div>
</Layout>

<script>
  if (window.location.href.includes("#results")) {
    changeTab("results");
  } else if (window.location.href.includes("#squad")) {
    changeTab("squad");
  } else {
    const squadSection = document.getElementById("squadSection");
    if (squadSection) squadSection.classList.remove("hidden");
  }

  const sections = document.querySelectorAll("div.section");
  sections.forEach((section) => {
    section.addEventListener("click", () => changeTab(section.id));
  });

  function changeTab(tab: string) {
    const squadSection = document.getElementById("squadSection");
    const resultsSection = document.getElementById("resultsSection");
    const squad = document.getElementById("squad");
    const results = document.getElementById("results");
    if (tab === "results") {
      squadSection?.classList.add("hidden");
      resultsSection?.classList.remove("hidden");
      if (squad && results) {
        squad.classList.remove("border-[#ff4b44]");
        squad.classList.remove("font-bold");
        squad.classList.add("hover:text-[#ff4b44]");
        results.classList.add("border-[#ff4b44]");
        results.classList.add("font-bold");
        results.classList.remove("hover:text-[#ff4b44]");
        window.location.href = "#results";
      }
    } else {
      squadSection?.classList.remove("hidden");
      resultsSection?.classList.add("hidden");
      if (squad && results) {
        squad.classList.add("border-[#ff4b44]");
        squad.classList.add("font-bold");
        squad.classList.remove("hover:text-[#ff4b44]");
        results.classList.remove("border-[#ff4b44]");
        results.classList.remove("font-bold");
        results.classList.add("hover:text-[#ff4b44]");
        window.location.href = "#squad";
      }
    }
  }
</script>
