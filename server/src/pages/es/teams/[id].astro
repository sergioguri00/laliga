---
import Layout from "@/layouts/Layout.astro";
import Squad from "@/components/Squad.astro";
import ResultsTable from "@/components/ResultsTable.astro";
import { translator } from "@/utils/dictionary.js";
import "@/styles/global.css";

const { id } = Astro.params;
const teamResponse = await fetch(`http://localhost:1234/teams/${id}`);
const teamData = await teamResponse.json();
const team = teamData[0];

const stadiumResponse = await fetch(
  `http://localhost:1234/teams/${id}/stadium`
);
const stadiumData = await stadiumResponse.json();
const stadium = stadiumData[0];

const managerResponse = await fetch(
  `http://localhost:1234/teams/${id}/manager`
);
const managerData = await managerResponse.json();
const manager = managerData[0];

const resultsResponse = await fetch(
  `http://localhost:1234/teams/${id}/matches`
);
const resultsData = await resultsResponse.json();

const playersData = await fetch(`http://localhost:1234/teams/${id}/players`);
const players = await playersData.json();

const tableResponse = await fetch("http://localhost:1234/leagues/1/table");
const tableData = await tableResponse.json();
const teamPosition =
  tableData.findIndex(
    (teamLeague: { team_id: number }) => teamLeague.team_id === team.id
  ) + 1;
const teamStats = tableData[teamPosition - 1];

export async function getStaticPaths() {
  const teamsResponse = await fetch("http://localhost:1234/teams");
  const teamsData = await teamsResponse.json();
  const paths = teamsData.map((team: { id: number }) => ({
    params: { id: team.id },
  }));

  return paths;
}

export async function getStaticProps({ params }: { params: { id: string } }) {
  const { id } = params;
  const teamResponse = await fetch(`http://localhost:1234/teams/${id}`);
  const teamData = await teamResponse.json();

  if (!teamData) {
    throw new Error("team not found");
  }

  return { props: { teamData } };
}

const currentLang = Astro.currentLocale || "es";
---

<Layout
  title=`LaLiga | ${team.shortName}`
  description={`All information about ${team.name}`}
>
  <div class="py-3 px-5 mt-20">
    {
      (
        <div
          transition:name={`team-${id}`}
          class={`w-full h-auto grid grid-cols-1 sm:h-96 sm:grid-cols-3 grid-rows-3 sm:grid-rows-1 items-center gap-4 rounded-3xl p-8 shadow-zinc-500 shadow-lg`}
          style={`background: radial-gradient(circle, ${team.secondaryColor} 0%, ${team.mainColor} 50%)`}
        >
          <div
            class={`text-center flex flex-col gap-4 ${team.mainColor === "#ffffff" || team.mainColor === "#ffd301" ? "text-mainblack" : "text-white"}`}
          >
            <div class="flex flex-col justify-between items-center font-la-liga-font">
              <h1 class="text-4xl font-medium text-center font-la-liga-font">
                {team.name}
              </h1>
              <div class="flex flex-row justify-center items-end">
                <p class="text-lg mr-1 uppercase">est.</p>
                <p class="text-2xl">{team.year}</p>
              </div>
            </div>
            <div>
              <p class="font-bold uppercase">
                {translator(currentLang, "president")}
              </p>
              <p>{team.president}</p>
            </div>
            <div>
              <p class="font-la-liga-font text-2xl">{`POS. ${teamPosition}`}</p>
              <p class="font-la-liga-font text-2xl">{`${teamStats.points} pts`}</p>
              <p class="font-la-liga-font text-2xl">{`${teamStats.wins} ${translator(currentLang, "wins")} | ${teamStats.draws} ${translator(currentLang, "draws")} | ${teamStats.losses} ${translator(currentLang, "losses")}`}</p>
            </div>
          </div>
          <div>
            <a
              href={team.website}
              target="_blank"
              rel="noreferrer noopener"
              class="flex flex-col hover:scale-105 transition"
            >
              <img src={team.badge} alt={team.name} class="mx-auto h-full" />
            </a>
          </div>
          <div
            class={`grid grid-rows-2 justify-center items-center ${team.mainColor === "#ffffff" || team.mainColor === "#ffd301" ? "text-mainblack" : "text-white"}`}
          >
            <div class="text-center">
              <p class="text-2xl font-la-liga-font">{stadium.name}</p>
              <div class="flex flex-row items-center mt-3 justify-between text-center">
                <div>
                  <p class="font-bold uppercase">est.</p>
                  <p>{stadium.year}</p>
                </div>
                <div>
                  <p class="font-bold uppercase">
                    {translator(currentLang, "capacity")}
                  </p>
                  <p>{stadium.capacity}</p>
                </div>
              </div>
            </div>
            <div>
              <a
                href={`https://www.google.com/maps/search/?api=1&query=${stadium.latitude}%2C${stadium.longitude}`}
                target="_blank"
                rel="noreferrer noopener"
                class="flex flex-col hover:scale-105 transition"
              >
                <img
                  src={stadium.photo}
                  alt={stadium.name}
                  class="mx-auto h-24"
                />
                `
              </a>
            </div>
          </div>
        </div>
      )
    }
  </div>
  <div class="py-3 px-2 md:px-5">
    <nav class="flex flex-row w-full justify-around px-5 mb-10">
      <div
        id="squad"
        class={"cursor-pointer text-xl hover:border-laligared transition border-b-4 border-laligared font-bold section w-32 text-center uppercase"}
      >
        {translator(currentLang, "squad")}
      </div>
      <div
        id="results"
        class="cursor-pointer text-xl hover:text-laligared hover:border-laligared transition border-b-4 section w-36 text-center uppercase"
      >
        {translator(currentLang, "results")}
      </div>
    </nav>
    <Squad id="squadSection" team={team} manager={manager} players={players} />
    <section id="resultsSection" class="xl:p-10 hidden">
      <h2
        class="text-3xl text-bold uppercase font-la-liga-font mb-10 text-center"
      >
        {`${team.shortName} ${translator(currentLang, "resultsSection")}`}
      </h2>
      <ResultsTable teamResults={true} matchdayResultsData={resultsData} />
    </section>
  </div>
</Layout>

<script>
  document.addEventListener("astro:page-load", () => {
    if (window.location.href.includes("#results")) {
      changeTab("results");
    } else if (window.location.href.includes("#squad")) {
      changeTab("squad");
    } else {
      const squadSection = document.getElementById("squadSection");
      if (squadSection) squadSection.classList.remove("hidden");
    }

    const sections = document.querySelectorAll("div.section");
    sections.forEach((section) => {
      section.addEventListener("click", () => changeTab(section.id));
    });

    function changeTab(tab: string) {
      const squadSection = document.getElementById("squadSection");
      const resultsSection = document.getElementById("resultsSection");
      const squad = document.getElementById("squad");
      const results = document.getElementById("results");
      if (tab === "results") {
        squadSection?.classList.add("hidden");
        resultsSection?.classList.remove("hidden");
        if (squad && results) {
          squad.classList.remove("border-laligared");
          squad.classList.remove("font-bold");
          squad.classList.add("hover:text-laligared");
          results.classList.add("border-laligared");
          results.classList.add("font-bold");
          results.classList.remove("hover:text-laligared");
          window.location.href = "#results";
        }
      } else {
        squadSection?.classList.remove("hidden");
        resultsSection?.classList.add("hidden");
        if (squad && results) {
          squad.classList.add("border-laligared");
          squad.classList.add("font-bold");
          squad.classList.remove("hover:text-laligared");
          results.classList.remove("border-laligared");
          results.classList.remove("font-bold");
          results.classList.add("hover:text-laligared");
          window.location.href = "#squad";
        }
      }
    }
  });
</script>
