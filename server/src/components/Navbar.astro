---
import "../styles/global.css";
const page = Astro.request.url.toString().split("/");
const pageId = page[3];
---

<header
  class="h-20 fixed top-0 w-full z-50 border-b-[1px] border-black"
  style="background-color: white"
>
  <nav
    class="grid grid-cols-3 gap-4 p-4 w-full justify-items-center h-full items-center"
  >
    <a href="/" class="navbar-logo justify-self-start ml-2 sm:ml-5">
      <svg
        width="70"
        height="70"
        viewBox="0 0 70 70"
        class="fill-mainblack hover:scale-105 w-8 h-8 sm:w-10 sm:h-10 lg:w-12 lg:h-12"
      >
        <path
          d="M2.91 25.173L20.332 0h16.854L15.497 30.861h14.08L7.675 42.026l-4.41-5.618C1.701 34.346.99 32.782.99 30.648c0-1.92.712-3.77 1.92-5.475zM17.203 51.2c0-1.778.712-3.698 1.99-5.547L51.265 0h18.56L33.841 51.2h16.213L24.882 64l-5.405-6.897c-1.493-1.92-2.275-3.84-2.275-5.902l.001-.002z"
        >
        </path>
      </svg>
    </a>
    {
      page.length > 4 ? (
        <a
          href={`/${pageId}`}
          class="font-la-liga-font text-2xl sm:text-3xl flex items-center justify-center text-mainblack hover:scale-105 transition"
        >
          <span class="uppercase">{pageId}</span>
        </a>
      ) : (
        <div class="font-la-liga-font text-2xl sm:text-3xl flex items-center justify-center text-mainblack cursor-default">
          <span class="uppercase">{pageId}</span>
        </div>
      )
    }
    <div
      class="relative inline-block justify-self-end mr-2 sm:mr-5"
      id="language-selector"
    >
      <button
        class="rounded-2xl p-2 flex items-center gap-2 cursor-pointer flag-button"
        id="selected-language"
      >
        <img src="/flags/uk.svg" class="w-5 h-4 object-cover" />
        <span class="hidden sm:block">English</span>
      </button>
      <ul
        class="hidden absolute t-full rounded-2xl list-none right-0 m-0 p-4 w-40 z-[60] text-white"
        style={`background-color: #00001B`}
        id="language-dropdown"
      >
        <li
          data-lang="en"
          class="w-5 h-4 flex items-center gap-2 cursor-pointer hover:scale-105 transition"
          id="en-option"
        >
          <img src="/flags/uk.svg" class="w-5 h-4 object-cover" />
          <span>English</span>
        </li>
        <li
          data-lang="es"
          class="w-5 h-4 flex items-center gap-2 cursor-pointer hover:scale-105 transition mt-4"
          id="es-option"
        >
          <img src="/flags/es.svg" class="w-5 h-4 object-cover" /><span
            >Espa√±ol</span
          >
        </li>
      </ul>
    </div>
    <script>
      const selectedLanguage = document.getElementById("selected-language");
      const languageDropdown = document.getElementById("language-dropdown");
      const enOption = document.getElementById("en-option");
      const esOption = document.getElementById("es-option");

      selectedLanguage?.addEventListener("click", () => {
        if (languageDropdown?.classList.contains("hidden")) {
          languageDropdown?.classList.remove("hidden");
          languageDropdown?.classList.add("block");
        } else {
          languageDropdown?.classList.remove("block");
          languageDropdown?.classList.add("hidden");
        }
      });

      enOption?.addEventListener("click", () => {
        const enImg = enOption?.querySelector("img")?.src;
        const enText = enOption?.querySelector("span")?.textContent;
        const enQueryImg = selectedLanguage?.querySelector("img");
        const enChnode = selectedLanguage?.childNodes[4] as Node;

        enQueryImg.src = enImg;
        enChnode.nodeValue = ` ${enText}`;

        languageDropdown?.classList.remove("block");
        languageDropdown?.classList.add("hidden");
      });

      esOption?.addEventListener("click", () => {
        const esImg = esOption?.querySelector("img")?.src;
        const esText = esOption?.querySelector("span")?.textContent;
        const esQueryImg = selectedLanguage?.querySelector("img");
        const esChnode = selectedLanguage?.childNodes[4] as Node;

        esQueryImg.src = esImg;
        esChnode.nodeValue = `${esText}`;

        languageDropdown?.classList.remove("block");
        languageDropdown?.classList.add("hidden");
      });

      document.addEventListener("click", (event) => {
        if (
          !document
            .getElementById("language-selector")
            ?.contains(event.target as Node)
        ) {
          languageDropdown?.classList.remove("block");
          languageDropdown?.classList.add("hidden");
        }
      });
    </script>
  </nav>
</header>
