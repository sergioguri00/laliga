---
import { translator } from "@/utils/dictionary.js";
import { getRelativeLocaleUrl } from "astro:i18n";

const tableResponse = await fetch("http://localhost:1234/leagues/1/table");
const tableData = await tableResponse.json();

interface Team {
  team_id: number;
  shortName: string;
  points: number;
  matches_played: number;
  wins: number;
  draws: number;
  losses: number;
  goals_scored: number;
  goals_conceded: number;
  goalDifference: number;
  badge: string;
}

const currentLang = Astro.currentLocale || "es";
---

<div>
  <h2 class="text-2xl text-bold uppercase text-center font-la-liga-font">
    {translator(currentLang, "leagueTable")}
  </h2>
  <table class="w-full font-la-liga-font leagueTable mt-4">
    <tr>
      <th>pos</th>
      <th>{translator(currentLang, "team")}</th>
      <th>pts</th>
      <th class="hidden md:table-cell">{translator(currentLang, "mp")}</th>
      <th class="hidden md:table-cell">{translator(currentLang, "mw")}</th>
      <th class="hidden md:table-cell">{translator(currentLang, "md")}</th>
      <th class="hidden md:table-cell">{translator(currentLang, "ml")}</th>
      <th class="hidden md:table-cell">{translator(currentLang, "gf")}</th>
      <th class="hidden md:table-cell">{translator(currentLang, "ga")}</th>
      <th>{translator(currentLang, "gd")}</th>
    </tr>
    {
      tableData.map((team: Team, index: number) => (
        <tr>
          <td class="table-cell">
            <p class="tablePosition min-w-[30px] max-w-[30px] min-h-[30px] max-h-[30px] rounded-xl justify-self-center">
              {index + 1}
            </p>
          </td>
          <td class="table-cell">
            <a
              href={getRelativeLocaleUrl(currentLang, `/teams/${team.team_id}`)}
              class="flex-row flex items-center justify-self-start hover:scale-105 hover:text-laligared transition"
            >
              <img src={team.badge} class="w-8 h-8 mt-1" />
              {team.shortName}
            </a>
          </td>
          <td>{team.points}</td>
          <td class="hidden md:table-cell">{team.matches_played}</td>
          <td class="hidden md:table-cell">{team.wins}</td>
          <td class="hidden md:table-cell">{team.draws}</td>
          <td class="hidden md:table-cell">{team.losses}</td>
          <td class="hidden md:table-cell">{team.goals_scored}</td>
          <td class="hidden md:table-cell">{team.goals_conceded}</td>
          <td>
            {team.goalDifference > 0
              ? `+${team.goalDifference}`
              : team.goalDifference}
          </td>
        </tr>
      ))
    }
  </table>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const tablePosition =
      document.querySelectorAll<HTMLElement>(".tablePosition");

    for (let i = 0; i < tablePosition.length; i++) {
      if (i == 0) {
        tablePosition[i].style.backgroundColor = "#EFBF04";
        tablePosition[i].style.color = "white";
      } else if (i > 0 && i < 4) {
        tablePosition[i].style.backgroundColor = "#0000FF";
        tablePosition[i].style.color = "white";
      } else if (i === 4) {
        tablePosition[i].style.backgroundColor = "#FF7600";
        tablePosition[i].style.color = "white";
      } else if (i === 5) {
        tablePosition[i].style.backgroundColor = "#5CED73";
        tablePosition[i].style.color = "white";
      } else if (i > 16) {
        tablePosition[i].style.backgroundColor = "red";
        tablePosition[i].style.color = "white";
      }
    }
  });
</script>
